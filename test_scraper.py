#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∫—Ä–µ–π–ø–µ—Ä–æ–≤.
"""

import asyncio
import logging
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, str(Path(__file__).parent))

from main import AntiBotClient, ScraperOrchestrator


async def test_vkusvill():
    """–¢–µ—Å—Ç —Å–∫—Ä–µ–π–ø–µ—Ä–∞ –í–∫—É—Å–í–∏–ª–ª."""
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –í–∫—É—Å–í–∏–ª–ª —Å–∫—Ä–µ–π–ø–µ—Ä–∞...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∞–Ω—Ç–∏–±–æ—Ç-–∫–ª–∏–µ–Ω—Ç
        antibot_client = AntiBotClient(concurrency=2, timeout=30)
        
        # –°–æ–∑–¥–∞–µ–º –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä
        orchestrator = ScraperOrchestrator(
            antibot_client=antibot_client,
            output_path="test_vkusvill.csv"
        )
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫—Ä–µ–π–ø–∏–Ω–≥ —Å –ª–∏–º–∏—Ç–æ–º 5 —Ç–æ–≤–∞—Ä–æ–≤
        await orchestrator.scrape_shop(
            shop='vkusvill',
            city='–ú–æ—Å–∫–≤–∞',
            coords='55.75,37.61',
            limit=5
        )
        
        # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        orchestrator.export_data()
        orchestrator.print_stats()
        
        print("‚úÖ –í–∫—É—Å–í–∏–ª–ª —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –í–∫—É—Å–í–∏–ª–ª: {e}")
    finally:
        await antibot_client.close()


async def test_samokat():
    """–¢–µ—Å—Ç —Å–∫—Ä–µ–π–ø–µ—Ä–∞ –°–∞–º–æ–∫–∞—Ç–∞."""
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –°–∞–º–æ–∫–∞—Ç —Å–∫—Ä–µ–π–ø–µ—Ä–∞...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∞–Ω—Ç–∏–±–æ—Ç-–∫–ª–∏–µ–Ω—Ç
        antibot_client = AntiBotClient(concurrency=2, timeout=30)
        
        # –°–æ–∑–¥–∞–µ–º –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä
        orchestrator = ScraperOrchestrator(
            antibot_client=antibot_client,
            output_path="test_samokat.csv"
        )
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫—Ä–µ–π–ø–∏–Ω–≥ —Å –ª–∏–º–∏—Ç–æ–º 3 —Ç–æ–≤–∞—Ä–∞
        await orchestrator.scrape_shop(
            shop='samokat',
            city='–ú–æ—Å–∫–≤–∞',
            coords='55.75,37.61',
            limit=3
        )
        
        # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        orchestrator.export_data()
        orchestrator.print_stats()
        
        print("‚úÖ –°–∞–º–æ–∫–∞—Ç —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –°–∞–º–æ–∫–∞—Ç: {e}")
    finally:
        await antibot_client.close()


async def test_lavka():
    """–¢–µ—Å—Ç —Å–∫—Ä–µ–π–ø–µ—Ä–∞ –õ–∞–≤–∫–∏."""
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –õ–∞–≤–∫–∞ —Å–∫—Ä–µ–π–ø–µ—Ä–∞...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∞–Ω—Ç–∏–±–æ—Ç-–∫–ª–∏–µ–Ω—Ç —Å –Ω–∏–∑–∫–æ–π –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ—Å—Ç—å—é
        antibot_client = AntiBotClient(concurrency=1, timeout=60)
        
        # –°–æ–∑–¥–∞–µ–º –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä
        orchestrator = ScraperOrchestrator(
            antibot_client=antibot_client,
            output_path="test_lavka.csv"
        )
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫—Ä–µ–π–ø–∏–Ω–≥ —Å –ª–∏–º–∏—Ç–æ–º 2 —Ç–æ–≤–∞—Ä–∞
        await orchestrator.scrape_shop(
            shop='lavka',
            city='–ú–æ—Å–∫–≤–∞',
            coords='55.75,37.61',
            limit=2
        )
        
        # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        orchestrator.export_data()
        orchestrator.print_stats()
        
        print("‚úÖ –õ–∞–≤–∫–∞ —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –õ–∞–≤–∫–∞: {e}")
    finally:
        await antibot_client.close()


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s - %(levelname)s - %(message)s',
        handlers=[logging.StreamHandler()]
    )
    
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫—Ä–µ–π–ø–µ—Ä–æ–≤ –≥–æ—Ç–æ–≤–æ–π –µ–¥—ã")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π —Å–∫—Ä–µ–π–ø–µ—Ä
    await test_vkusvill()
    print()
    
    await test_samokat()
    print()
    
    await test_lavka()
    print()
    
    print("=" * 60)
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
    print("\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ CSV —Ñ–∞–π–ª—ã:")
    print("- test_vkusvill.csv")
    print("- test_samokat.csv") 
    print("- test_lavka.csv")


if __name__ == '__main__':
    asyncio.run(main())

