#!/usr/bin/env python3
"""–ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞ –≥–æ—Ç–æ–≤–æ–π –µ–¥—ã."""

import subprocess
import sys
from pathlib import Path


def show_menu():
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    print("üöÄ –ü–ê–†–°–ï–† –ì–û–¢–û–í–û–ô –ï–î–´")
    print("=" * 50)
    print("1. üì¶ –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ (–≤—Å–µ –º–∞–≥–∞–∑–∏–Ω—ã)")
    print("2. üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–∞–º–æ–∫–∞—Ç–∞") 
    print("3. üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –õ–∞–≤–∫–∏")
    print("4. üìä –ü–æ–∫–∞–∑–∞—Ç—å –≥–æ—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ")
    print("5. üßπ –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã")
    print("6. ‚öôÔ∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å CLI –ø–∞—Ä—Å–µ—Ä")
    print("0. ‚ùå –í—ã—Ö–æ–¥")
    print("-" * 50)


def run_full_scraper():
    """–ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞."""
    print("üöÄ –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ì–û –ü–ê–†–°–ï–†–ê")
    print("-" * 30)
    
    cmd = ["python3", "scripts/final_working_scraper.py"]
    
    try:
        subprocess.run(cmd, check=True)
        print("‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω!")
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {e}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


def run_cli_scraper():
    """–ó–∞–ø—É—Å–∫ CLI –ø–∞—Ä—Å–µ—Ä–∞."""
    print("‚öôÔ∏è CLI –ü–ê–†–°–ï–†")
    print("-" * 30)
    
    print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
    print("python3 -m app scrape --shop vkusvill --city '–ú–æ—Å–∫–≤–∞' --out data/vkusvill.csv")
    print("python3 -m app scrape --shop samokat --city '–ú–æ—Å–∫–≤–∞' --out data/samokat.csv")
    print("python3 -m app scrape --shop lavka --city '–ú–æ—Å–∫–≤–∞' --out data/lavka.csv")
    print("python3 -m app scrape --shop all --city '–ú–æ—Å–∫–≤–∞' --out data/all_shops.csv")
    
    cmd_input = input("\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞: ").strip()
    
    if not cmd_input:
        cmd_input = "python3 -m app scrape --shop vkusvill --city '–ú–æ—Å–∫–≤–∞' --out data/cli_test.csv"
    
    try:
        subprocess.run(cmd_input.split(), check=True)
        print("‚úÖ CLI –∫–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ CLI: {e}")


def show_data():
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–æ—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ."""
    print("üìä –ì–û–¢–û–í–´–ï –î–ê–ù–ù–´–ï")
    print("-" * 30)
    
    data_files = list(Path("data").glob("*.csv"))
    
    if not data_files:
        print("‚ùå CSV —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    print("üìÑ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã:")
    for i, file in enumerate(data_files, 1):
        try:
            with open(file, 'r') as f:
                lines = sum(1 for line in f) - 1
            size_kb = file.stat().st_size / 1024
            
            print(f"{i}. {file.name}")
            print(f"   üìä –¢–æ–≤–∞—Ä–æ–≤: {lines}")
            print(f"   üíæ –†–∞–∑–º–µ—Ä: {size_kb:.1f} KB")
            print()
        except Exception as e:
            print(f"{i}. {file.name} - –æ—à–∏–±–∫–∞: {e}")
    
    # –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ª—É—á—à–∏–µ —Ñ–∞–π–ª—ã
    best_files = [f for f in data_files if any(word in f.name.lower() for word in ['complete', 'final', 'real'])]
    
    if best_files:
        print("üí° –†–ï–ö–û–ú–ï–ù–î–£–ï–ú–´–ï –§–ê–ô–õ–´:")
        for file in best_files:
            print(f"   üìÑ {file.name}")


def cleanup():
    """–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤."""
    print("üßπ –û–ß–ò–°–¢–ö–ê")
    print("-" * 30)
    
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    temp_patterns = [
        "*.json",
        "data/*test*",
        "data/*debug*",
        "logs/*.log"
    ]
    
    removed = 0
    for pattern in temp_patterns:
        files = list(Path(".").glob(pattern))
        for file in files:
            try:
                file.unlink()
                print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω: {file}")
                removed += 1
            except:
                pass
    
    print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {removed}")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    while True:
        print("\n" + "="*50)
        show_menu()
        
        try:
            choice = input("üëâ –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é: ").strip()
            
            if choice == "0":
                print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            elif choice == "1":
                run_full_scraper()
            elif choice == "2":
                subprocess.run(["python3", "scripts/debug_samokat.py"])
            elif choice == "3":
                subprocess.run(["python3", "scripts/debug_lavka_real.py"])
            elif choice == "4":
                show_data()
            elif choice == "5":
                cleanup()
            elif choice == "6":
                run_cli_scraper()
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –æ–ø—Ü–∏—è")
                
        except KeyboardInterrupt:
            print("\nüëã –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            break
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    print("üéØ –ü–ê–†–°–ï–† –ì–û–¢–û–í–û–ô –ï–î–´ - –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
    print("\nüìä –¢–ï–ö–£–©–ò–ô –°–¢–ê–¢–£–°:")
    
    if Path("data/COMPLETE_real_foods.csv").exists():
        print("‚úÖ –ï—Å—Ç—å –≥–æ—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ: data/COMPLETE_real_foods.csv")
    elif Path("data/FINAL_real_foods.csv").exists():
        print("‚úÖ –ï—Å—Ç—å –≥–æ—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ: data/FINAL_real_foods.csv")
    else:
        print("‚ö†Ô∏è –ì–æ—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç - –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø–∞—Ä—Å–∏–Ω–≥")
    
    try:
        main()
    except KeyboardInterrupt:
        print("\nüëã –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        sys.exit(0)
