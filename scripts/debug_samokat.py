#!/usr/bin/env python3
"""–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –°–∞–º–æ–∫–∞—Ç–∞ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º."""

import asyncio
from playwright.async_api import async_playwright
from app.utils.logger import setup_logger


async def debug_samokat():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å –°–∞–º–æ–∫–∞—Ç–æ–º."""
    setup_logger(level="INFO")
    
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ê–ú–û–ö–ê–¢–ê")
    print("üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å, –∫–∞–ø—á–∏, —Å–µ–ª–µ–∫—Ç–æ—Ä—ã")
    print("=" * 50)
    
    playwright = await async_playwright().start()
    browser = await playwright.firefox.launch(
        headless=False,
        firefox_user_prefs={
            "dom.webdriver.enabled": False,
            "useAutomationExtension": False
        }
    )
    
    context = await browser.new_context(
        user_agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/119.0",
        locale='ru-RU',
        timezone_id='Europe/Moscow'
    )
    
    page = await context.new_page()
    
    try:
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        print("\nüìÑ –ü–†–û–í–ï–†–ö–ê –ì–õ–ê–í–ù–û–ô –°–¢–†–ê–ù–ò–¶–´")
        print("-" * 30)
        
        await page.goto("https://samokat.ru", wait_until="domcontentloaded", timeout=60000)
        title = await page.title()
        print(f"‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫: {title}")
        
        if "—Å–ª–æ–º–∞–ª–∏—Å—å" in title.lower() or "–æ—à–∏–±–∫–∞" in title.lower():
            print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –°–∞–º–æ–∫–∞—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É")
            print("üí° –†–ï–®–ï–ù–ò–ï: –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∫–æ–≥–¥–∞ —Ç–µ—Ö—Ä–∞–±–æ—Ç—ã –∑–∞–∫–æ–Ω—á–∞—Ç—Å—è")
            return False
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≥–æ—Ç–æ–≤–æ–π –µ–¥—ã
        print("\nüì¶ –ü–†–û–í–ï–†–ö–ê –ö–ê–¢–ï–ì–û–†–ò–ò –ì–û–¢–û–í–û–ô –ï–î–´")
        print("-" * 30)
        
        category_url = "https://samokat.ru/category/vsya-gotovaya-eda-13"
        print(f"üîó URL: {category_url}")
        
        await page.goto(category_url, wait_until="domcontentloaded", timeout=60000)
        await asyncio.sleep(5)
        
        cat_title = await page.title()
        print(f"üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {cat_title}")
        
        if "—Å–ª–æ–º–∞–ª–∏—Å—å" in cat_title.lower():
            print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
            return False
        
        # 3. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        print("\nüîç –ê–ù–ê–õ–ò–ó –°–û–î–ï–†–ñ–ò–ú–û–ì–û –°–¢–†–ê–ù–ò–¶–´")
        print("-" * 30)
        
        page_content = await page.content()
        content_length = len(page_content)
        print(f"üìÑ –†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {content_length} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –ò—â–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
        keywords = ['—Ç–æ–≤–∞—Ä', 'product', '—Ü–µ–Ω–∞', 'price', '–∫–∞—Ä—Ç–æ—á–∫–∞', 'card']
        for keyword in keywords:
            count = page_content.lower().count(keyword)
            print(f"üîç '{keyword}': {count} —É–ø–æ–º–∏–Ω–∞–Ω–∏–π")
        
        # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
        print("\nüéØ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ï–õ–ï–ö–¢–û–†–û–í")
        print("-" * 30)
        
        selectors = [
            '[class*="Product"]',
            '[class*="Card"]',
            '[class*="product"]',
            'a[href*="/product/"]',
            '.product-card',
            '.catalog-item',
            '.goods-tile',
            'article',
            'section'
        ]
        
        max_elements = 0
        best_selector = ""
        
        for selector in selectors:
            try:
                elements = await page.locator(selector).all()
                count = len(elements)
                print(f"   {selector}: {count} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
                
                if count > max_elements:
                    max_elements = count
                    best_selector = selector
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
                    if elements:
                        try:
                            first_text = await elements[0].inner_text()
                            print(f"      üìù –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç: {first_text[:50]}...")
                        except:
                            print(f"      ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç")
                            
            except Exception as e:
                print(f"   {selector}: –û–®–ò–ë–ö–ê - {e}")
        
        if max_elements > 0:
            print(f"\n‚úÖ –õ–£–ß–®–ò–ô –°–ï–õ–ï–ö–¢–û–†: {best_selector} ({max_elements} —ç–ª–µ–º–µ–Ω—Ç–æ–≤)")
        else:
            print(f"\n‚ùå –ù–ò –û–î–ò–ù –°–ï–õ–ï–ö–¢–û–† –ù–ï –ù–ê–®–ï–õ –≠–õ–ï–ú–ï–ù–¢–´")
        
        # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏
        print("\nüìç –ü–†–û–í–ï–†–ö–ê –ê–î–†–ï–°–ê –î–û–°–¢–ê–í–ö–ò")
        print("-" * 30)
        
        # –ò—â–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –∞–¥—Ä–µ—Å–∞
        address_indicators = await page.locator('text="–∞–¥—Ä–µ—Å", text="–¥–æ—Å—Ç–∞–≤–∫–∞", text="–í—ã–±–µ—Ä–∏—Ç–µ"').all()
        print(f"üè† –ù–∞–π–¥–µ–Ω–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –∞–¥—Ä–µ—Å–∞: {len(address_indicators)}")
        
        for indicator in address_indicators[:3]:
            try:
                text = await indicator.inner_text()
                print(f"   üìç {text}")
            except:
                pass
        
        # –ñ–¥–µ–º –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –æ—Å–º–æ—Ç—Ä–∞
        print(f"\nüëÄ –í–ò–ó–£–ê–õ–¨–ù–´–ô –û–°–ú–û–¢–†")
        print("‚è∞ –ñ–¥–µ–º 15 —Å–µ–∫—É–Ω–¥ –¥–ª—è –æ—Å–º–æ—Ç—Ä–∞ –±—Ä–∞—É–∑–µ—Ä–∞...")
        await asyncio.sleep(15)
        
        return max_elements > 0
        
    except Exception as e:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()
        return False
        
    finally:
        await page.close()
        await context.close()
        await browser.close()
        await playwright.stop()


if __name__ == "__main__":
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ê–ú–û–ö–ê–¢–ê")
    print("üéØ –í—ã—è–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–∞—Ä—Å–∏–Ω–≥–æ–º")
    
    success = asyncio.run(debug_samokat())
    
    if success:
        print("\n‚úÖ –°–∞–º–æ–∫–∞—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞!")
    else:
        print("\n‚ùå –°–∞–º–æ–∫–∞—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (—Ç–µ—Ö—Ä–∞–±–æ—Ç—ã –∏–ª–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞)")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–æ–π –º–∞–≥–∞–∑–∏–Ω")