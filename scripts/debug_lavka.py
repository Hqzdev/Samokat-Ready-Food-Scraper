#!/usr/bin/env python3
"""–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –Ø–Ω–¥–µ–∫—Å –õ–∞–≤–∫–∏ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º."""

import asyncio
from playwright.async_api import async_playwright
from app.utils.logger import setup_logger


async def debug_lavka():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å –Ø–Ω–¥–µ–∫—Å –õ–∞–≤–∫–æ–π."""
    setup_logger(level="INFO")
    
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –Ø–ù–î–ï–ö–° –õ–ê–í–ö–ò")
    print("üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–ø—á—É, –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å, —Å–µ–ª–µ–∫—Ç–æ—Ä—ã")
    print("=" * 50)
    
    playwright = await async_playwright().start()
    browser = await playwright.firefox.launch(
        headless=False,
        firefox_user_prefs={
            "dom.webdriver.enabled": False,
            "useAutomationExtension": False
        }
    )
    
    context = await browser.new_context(
        user_agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/119.0",
        locale='ru-RU',
        timezone_id='Europe/Moscow'
    )
    
    page = await context.new_page()
    
    try:
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        print("\nüìÑ –ü–†–û–í–ï–†–ö–ê –ì–õ–ê–í–ù–û–ô –°–¢–†–ê–ù–ò–¶–´")
        print("-" * 30)
        
        await page.goto("https://lavka.yandex.ru", wait_until="domcontentloaded", timeout=60000)
        title = await page.title()
        print(f"‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫: {title}")
        
        if "—Ä–æ–±–æ—Ç" in title.lower() or "captcha" in title.lower():
            print("üõ°Ô∏è –û–ë–ù–ê–†–£–ñ–ï–ù–ê –ö–ê–ü–ß–ê –Ω–∞ –≥–ª–∞–≤–Ω–æ–π!")
            print("üë§ –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –∫–∞–ø—á—É –≤—Ä—É—á–Ω—É—é")
            
            # –î–∞–µ–º –≤—Ä–µ–º—è –ø—Ä–æ–π—Ç–∏ –∫–∞–ø—á—É
            print("‚è∞ –£ –≤–∞—Å –µ—Å—Ç—å 60 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∫–∞–ø—á–∏...")
            for i in range(60, 0, -10):
                print(f"   ‚è∞ –û—Å—Ç–∞–ª–æ—Å—å {i} —Å–µ–∫—É–Ω–¥...")
                await asyncio.sleep(10)
                
                try:
                    current_title = await page.title()
                    if "—Ä–æ–±–æ—Ç" not in current_title.lower():
                        print("‚úÖ –ö–∞–ø—á–∞ –ø—Ä–æ–π–¥–µ–Ω–∞!")
                        break
                except:
                    pass
            else:
                print("‚ùå –ö–∞–ø—á–∞ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞")
                return False
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≥–æ—Ç–æ–≤–æ–π –µ–¥—ã
        print("\nüì¶ –ü–†–û–í–ï–†–ö–ê –ö–ê–¢–ï–ì–û–†–ò–ò –ì–û–¢–û–í–û–ô –ï–î–´")
        print("-" * 30)
        
        category_url = "https://lavka.yandex.ru/category/gotovaya_eda"
        print(f"üîó URL: {category_url}")
        
        await page.goto(category_url, wait_until="domcontentloaded", timeout=60000)
        await asyncio.sleep(5)
        
        cat_title = await page.title()
        print(f"üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {cat_title}")
        
        if "—Ä–æ–±–æ—Ç" in cat_title.lower():
            print("üõ°Ô∏è –ö–ê–ü–ß–ê –ù–ê –°–¢–†–ê–ù–ò–¶–ï –ö–ê–¢–ï–ì–û–†–ò–ò!")
            print("üë§ –ü—Ä–æ–π–¥–∏—Ç–µ –∫–∞–ø—á—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
            
            for i in range(60, 0, -10):
                print(f"   ‚è∞ –û—Å—Ç–∞–ª–æ—Å—å {i} —Å–µ–∫—É–Ω–¥...")
                await asyncio.sleep(10)
                
                try:
                    current_title = await page.title()
                    if "—Ä–æ–±–æ—Ç" not in current_title.lower():
                        print("‚úÖ –ö–∞–ø—á–∞ –ø—Ä–æ–π–¥–µ–Ω–∞!")
                        break
                except:
                    pass
            else:
                print("‚ùå –ö–∞–ø—á–∞ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞")
                return False
        
        # 3. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        print("\nüîç –ê–ù–ê–õ–ò–ó –°–û–î–ï–†–ñ–ò–ú–û–ì–û –°–¢–†–ê–ù–ò–¶–´")
        print("-" * 30)
        
        # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
        print("‚è≥ –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ (10 —Å–µ–∫)...")
        await asyncio.sleep(10)
        
        page_content = await page.content()
        content_length = len(page_content)
        print(f"üìÑ –†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {content_length} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –ò—â–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
        keywords = ['—Ç–æ–≤–∞—Ä', 'product', '—Ü–µ–Ω–∞', 'price', '–∫–∞—Ä—Ç–æ—á–∫–∞', 'card', '–≥–æ—Ç–æ–≤–∞—è –µ–¥–∞']
        for keyword in keywords:
            count = page_content.lower().count(keyword)
            print(f"üîç '{keyword}': {count} —É–ø–æ–º–∏–Ω–∞–Ω–∏–π")
        
        # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
        print("\nüéØ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ï–õ–ï–ö–¢–û–†–û–í")
        print("-" * 30)
        
        selectors = [
            '[data-testid*="product"]',
            '[data-testid*="item"]',
            '[class*="Product"]',
            '[class*="Card"]',
            '[class*="Item"]',
            '[class*="product"]',
            'a[href*="/product/"]',
            'a[href*="/goods/"]',
            '.product',
            '.item',
            'article',
            'section'
        ]
        
        max_elements = 0
        best_selector = ""
        
        for selector in selectors:
            try:
                elements = await page.locator(selector).all()
                count = len(elements)
                print(f"   {selector}: {count} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
                
                if count > max_elements:
                    max_elements = count
                    best_selector = selector
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–µ—Ä–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
                    if elements:
                        print(f"      üìù –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–µ—Ä–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤:")
                        for i, el in enumerate(elements[:3]):
                            try:
                                text = await el.inner_text()
                                print(f"         {i+1}. {text[:50]}...")
                            except:
                                print(f"         {i+1}. [–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞]")
                            
            except Exception as e:
                print(f"   {selector}: –û–®–ò–ë–ö–ê - {e}")
        
        # 5. –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∏ –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        print("\nüîÑ –ü–†–û–ö–†–£–¢–ö–ê –ò –ü–û–í–¢–û–†–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê")
        print("-" * 30)
        
        print("üìú –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É...")
        for i in range(5):
            await page.mouse.wheel(0, 2000)
            await asyncio.sleep(1)
            print(f"   –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ {i+1}/5")
        
        # –ü–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª—É—á—à–∏–π —Å–µ–ª–µ–∫—Ç–æ—Ä
        if best_selector:
            elements_after_scroll = await page.locator(best_selector).all()
            print(f"üìä –ü–æ—Å–ª–µ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏: {len(elements_after_scroll)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
            
            if len(elements_after_scroll) > max_elements:
                print("‚úÖ –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–æ–±–∞–≤–∏–ª–∞ –Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã!")
                max_elements = len(elements_after_scroll)
        
        # 6. –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print(f"\nüìä –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢")
        print("-" * 30)
        
        if max_elements > 0:
            print(f"‚úÖ –¢–û–í–ê–†–´ –ù–ê–ô–î–ï–ù–´: {max_elements} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
            print(f"üéØ –õ—É—á—à–∏–π —Å–µ–ª–µ–∫—Ç–æ—Ä: {best_selector}")
            print("üí° –°–∞–º–æ–∫–∞—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞!")
            
            # –ü—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–µ—Ä–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
            try:
                elements = await page.locator(best_selector).all()
                if elements:
                    first_element = elements[0]
                    
                    print(f"\nüß™ –¢–ï–°–¢ –ò–ó–í–õ–ï–ß–ï–ù–ò–Ø –î–ê–ù–ù–´–•")
                    print("-" * 30)
                    
                    # –ù–∞–∑–≤–∞–Ω–∏–µ
                    try:
                        name = await first_element.inner_text()
                        print(f"üìù –¢–µ–∫—Å—Ç —ç–ª–µ–º–µ–Ω—Ç–∞: {name[:100]}...")
                    except:
                        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç")
                    
                    # –°—Å—ã–ª–∫–∞
                    try:
                        link_locator = first_element.locator('a[href]')
                        if await link_locator.count() > 0:
                            href = await link_locator.first.get_attribute('href')
                            print(f"üîó –°—Å—ã–ª–∫–∞: {href}")
                        else:
                            print("‚ùå –°—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ —Å—Å—ã–ª–∫–∏: {e}")
                    
                    # –¶–µ–Ω–∞
                    try:
                        price_selectors = ['.ProductCardActions_text__3Uohy', '[class*="price"]', 'text=‚ÇΩ']
                        for price_sel in price_selectors:
                            price_locator = first_element.locator(price_sel)
                            if await price_locator.count() > 0:
                                price_text = await price_locator.first.inner_text()
                                print(f"üí∞ –¶–µ–Ω–∞ ({price_sel}): {price_text}")
                                break
                        else:
                            print("‚ùå –¶–µ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ —Ü–µ–Ω—ã: {e}")
            
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è: {e}")
            
            return True
        else:
            print("‚ùå –¢–û–í–ê–†–´ –ù–ï –ù–ê–ô–î–ï–ù–´")
            print("üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("   - –ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏")
            print("   - –¢–æ–≤–∞—Ä—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ JavaScript")
            print("   - –ê–Ω—Ç–∏–±–æ—Ç –±–ª–æ–∫–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø")
            return False
        
    except Exception as e:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()
        return False
        
    finally:
        # –ñ–¥–µ–º –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Å–º–æ—Ç—Ä–∞
        print("\nüëÄ –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Å–º–æ—Ç—Ä (10 —Å–µ–∫)...")
        await asyncio.sleep(10)


if __name__ == "__main__":
    print("üîç –ó–ê–ü–£–°–ö –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò –°–ê–ú–û–ö–ê–¢–ê")
    
    success = asyncio.run(debug_samokat())
    
    if success:
        print("\nüéâ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê: –°–∞–º–æ–∫–∞—Ç –¥–æ—Å—Ç—É–ø–µ–Ω!")
    else:
        print("\nüí• –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê: –°–∞–º–æ–∫–∞—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        print("üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –í–∫—É—Å–í–∏–ª–ª (—Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ)")
