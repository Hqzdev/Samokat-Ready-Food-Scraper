#!/usr/bin/env python3
"""–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –Ω–∞—Å—Ç–æ—è—â–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ URL –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞."""

import pandas as pd
import re
from pathlib import Path


def url_to_name(url: str) -> str:
    """–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ URL –≤ —á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ."""
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∞—Å—Ç—å —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏–∑ URL
        if '/goods/' in url:
            # –î–ª—è –í–∫—É—Å–í–∏–ª–ª: https://vkusvill.ru/goods/pasta-rizoni-s-syrnym-sousom-i-kuritsey-112440.html
            name_part = url.split('/goods/')[-1]
            name_part = name_part.split('.html')[0]  # –£–±–∏—Ä–∞–µ–º .html
            name_part = re.sub(r'-\d+$', '', name_part)  # –£–±–∏—Ä–∞–µ–º ID –≤ –∫–æ–Ω—Ü–µ
            
        elif '/product/' in url:
            # –î–ª—è –¥—Ä—É–≥–∏—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤
            name_part = url.split('/product/')[-1]
            
        else:
            return "–¢–æ–≤–∞—Ä –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"
        
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
        # –ó–∞–º–µ–Ω—è–µ–º –¥–µ—Ñ–∏—Å—ã –Ω–∞ –ø—Ä–æ–±–µ–ª—ã
        name = name_part.replace('-', ' ')
        
        # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –∑–∞–º–µ–Ω—ã —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π
        replacements = {
            ' s ': ' —Å ',
            ' i ': ' –∏ ',
            ' v ': ' –≤ ',
            ' na ': ' –Ω–∞ ',
            ' po ': ' –ø–æ ',
            ' iz ': ' –∏–∑ ',
            ' so ': ' —Å–æ ',
            'kurinoe': '–∫—É—Ä–∏–Ω–æ–µ',
            'kuriney': '–∫—É—Ä–∏—Ü–µ–π',
            'kurinyy': '–∫—É—Ä–∏–Ω—ã–π',
            'kurinaya': '–∫—É—Ä–∏–Ω–∞—è',
            'file': '—Ñ–∏–ª–µ',
            'zapechennoe': '–∑–∞–ø–µ—á–µ–Ω–Ω–æ–µ',
            'tsukini': '—Ü—É–∫–∏–Ω–∏',
            'motsarelloy': '–º–æ—Ü–∞—Ä–µ–ª–ª–æ–π',
            'lazanya': '–ª–∞–∑–∞–Ω—å—è',
            'kotleta': '–∫–æ—Ç–ª–µ—Ç–∞',
            'kartofelnym': '–∫–∞—Ä—Ç–æ—Ñ–µ–ª—å–Ω—ã–º',
            'pyure': '–ø—é—Ä–µ',
            'pasta': '–ø–∞—Å—Ç–∞',
            'rizoni': '—Ä–∏–∑–æ–Ω–∏',
            'syrnym': '—Å—ã—Ä–Ω—ã–º',
            'sousom': '—Å–æ—É—Å–æ–º',
            'pirog': '–ø–∏—Ä–æ–≥',
            'tatarskiy': '—Ç–∞—Ç–∞—Ä—Å–∫–∏–π',
            'kartofelem': '–∫–∞—Ä—Ç–æ—Ñ–µ–ª–µ–º',
            'myasom': '–º—è—Å–æ–º',
            'ptitsy': '–ø—Ç–∏—Ü—ã',
            'sendvich': '—Å–µ–Ω–¥–≤–∏—á',
            'sando': '—Å–∞–Ω–¥–æ',
            'raduzhnoy': '—Ä–∞–¥—É–∂–Ω–æ–π',
            'forelyu': '—Ñ–æ—Ä–µ–ª—å—é',
            'tvorozhnym': '—Ç–≤–æ—Ä–æ–∂–Ω—ã–º',
            'syrom': '—Å—ã—Ä–æ–º',
            'pesto': '–ø–µ—Å—Ç–æ',
            'pitstseta': '–ø–∏—Ü—Ü–µ—Ç–∞',
            'tsyplenkom': '—Ü—ã–ø–ª–µ–Ω–∫–æ–º',
            'kombo': '–∫–æ–º–±–æ',
            'nabor': '–Ω–∞–±–æ—Ä',
            'grudka': '–≥—Ä—É–¥–∫–∞',
            'po derevenski': '–ø–æ-–¥–µ—Ä–µ–≤–µ–Ω—Å–∫–∏',
            'salat': '—Å–∞–ª–∞—Ç',
            'letnikh': '–ª–µ—Ç–Ω–∏—Ö',
            'ovoshchey': '–æ–≤–æ—â–µ–π',
            'sup': '—Å—É–ø',
            'syrnyy': '—Å—ã—Ä–Ω—ã–π',
            'grenkami': '–≥—Ä–µ–Ω–∫–∞–º–∏',
            'oladi': '–æ–ª–∞–¥—å–∏',
            'kurinye': '–∫—É—Ä–∏–Ω—ã–µ',
            'ezhiki': '–µ–∂–∏–∫–∏',
            'myasnye': '–º—è—Å–Ω—ã–µ',
            'otvarnoy': '–æ—Ç–≤–∞—Ä–Ω–æ–π',
            'grechkoy': '–≥—Ä–µ—á–∫–æ–π',
            'roll': '—Ä–æ–ª–ª',
            'tsezar': '—Ü–µ–∑–∞—Ä—å',
            'pekinskoy': '–ø–µ–∫–∏–Ω—Å–∫–æ–π',
            'kapustoy': '–∫–∞–ø—É—Å—Ç–æ–π',
            'farfalle': '—Ñ–∞—Ä—Ñ–∞–ª–ª–µ',
            'kuritsa': '–∫—É—Ä–∏—Ü–∞',
            'kartofelnym': '–∫–∞—Ä—Ç–æ—Ñ–µ–ª—å–Ω—ã–º',
            'khashbraunom': '—Ö–∞—à–±—Ä–∞—É–Ω–æ–º',
            'tortile': '—Ç–æ—Ä—Ç–∏–ª—å–µ',
            'zapekanka': '–∑–∞–ø–µ–∫–∞–Ω–∫–∞',
            'tvorozhnaya': '—Ç–≤–æ—Ä–æ–∂–Ω–∞—è',
            'bez dob sakhara': '–±–µ–∑ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–∞—Ö–∞—Ä–∞',
            'myagkim': '–º—è–≥–∫–∏–º',
            'rikotta': '—Ä–∏–∫–æ—Ç—Ç–∞',
            'pibimpab': '–ø–∏–±–∏–º–ø–∞–±',
            'marinovannoy': '–º–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω–æ–π',
            'govyadinoy': '–≥–æ–≤—è–¥–∏–Ω–æ–π',
            'frikadelkami': '—Ñ—Ä–∏–∫–∞–¥–µ–ª—å–∫–∞–º–∏',
            'zvezdochki': '–∑–≤–µ–∑–¥–æ—á–∫–∏',
            'blinchiki': '–±–ª–∏–Ω—á–∏–∫–∏',
            'yaichnye': '—è–∏—á–Ω—ã–µ',
            'aziatski': '–ø–æ-–∞–∑–∏–∞—Ç—Å–∫–∏',
            'zhyulenom': '–∂—É–ª—å–µ–Ω–æ–º',
            'vinegret': '–≤–∏–Ω–µ–≥—Ä–µ—Ç',
            'marinovannoy': '–º–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω–æ–π',
            'zharenyy': '–∂–∞—Ä–µ–Ω—ã–π',
            'svininoy': '—Å–≤–∏–Ω–∏–Ω–æ–π',
            'gribami': '–≥—Ä–∏–±–∞–º–∏',
            'smetannom': '—Å–º–µ—Ç–∞–Ω–Ω–æ–º',
            'souse': '—Å–æ—É—Å–µ',
            'kabachkom': '–∫–∞–±–∞—á–∫–æ–º',
            'rostbifom': '—Ä–æ—Å—Ç–±–∏—Ñ–æ–º',
            'bebi': '–±–µ–±–∏',
            'kunzhutnym': '–∫—É–Ω–∂—É—Ç–Ω—ã–º',
            'vitaminnyy': '–≤–∏—Ç–∞–º–∏–Ω–Ω—ã–π',
            'limonnoy': '–ª–∏–º–æ–Ω–Ω–æ–π',
            'zapravkoy': '–∑–∞–ø—Ä–∞–≤–∫–æ–π',
            'mini': '–º–∏–Ω–∏',
            'chiabatta': '—á–∏–∞–±–∞—Ç—Ç–∞',
            'vetchinoy': '–≤–µ—Ç—á–∏–Ω–æ–π',
            'omletom': '–æ–º–ª–µ—Ç–æ–º',
            'rizotto': '—Ä–∏–∑–æ—Ç—Ç–æ',
            'belymi': '–±–µ–ª—ã–º–∏',
            'gribami': '–≥—Ä–∏–±–∞–º–∏',
            'boul': '–±–æ—É–ª',
            'zapechennoy': '–∑–∞–ø–µ—á–µ–Ω–Ω–æ–π',
            'kuskusom': '–∫—É—Å–∫—É—Å–æ–º',
            'batatom': '–±–∞—Ç–∞—Ç–æ–º',
            'maslyano': '–º–∞—Å–ª—è–Ω–æ',
            'limonnym': '–ª–∏–º–æ–Ω–Ω—ã–º',
            'govyadina': '–≥–æ–≤—è–¥–∏–Ω–∞',
            'tushenaya': '—Ç—É—à–µ–Ω–∞—è',
            'lisichkami': '–ª–∏—Å–∏—á–∫–∞–º–∏',
            'rizo': '—Ä–∏–∑–æ',
            'slivochno': '—Å–ª–∏–≤–æ—á–Ω–æ',
            'gribnom': '–≥—Ä–∏–±–Ω–æ–º',
            'plov': '–ø–ª–æ–≤',
            'borshch': '–±–æ—Ä—â',
            'kotlety': '–∫–æ—Ç–ª–µ—Ç—ã',
            'bulgurom': '–±—É–ª–≥—É—Ä–æ–º',
            'kinoa': '–∫–∏–Ω–æ–∞',
            'ukrainskiy': '—É–∫—Ä–∞–∏–Ω—Å–∫–∏–π'
        }
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –∑–∞–º–µ–Ω—ã
        for old, new in replacements.items():
            name = name.replace(old, new)
        
        # –ü—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º—É –≤–∏–¥—É
        name = name.strip().capitalize()
        
        # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
        name = re.sub(r'\s+', ' ', name)
        
        return name
        
    except Exception as e:
        return "–¢–æ–≤–∞—Ä –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"


def process_real_foods_file():
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞ —Å –Ω–∞—Å—Ç–æ—è—â–∏–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏."""
    print("üîß –û–ë–†–ê–ë–û–¢–ö–ê –ù–ê–°–¢–û–Ø–©–ò–• –¢–û–í–ê–†–û–í")
    print("üìÇ –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª: data/real_foods.csv")
    print("-" * 50)
    
    # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    df = pd.read_csv("data/real_foods.csv")
    print(f"üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å—Ç—Ä–æ–∫: {len(df)}")
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞—Å—Ç–æ—è—â–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∏–∑ URL
    print("üîÑ –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –∏–∑ URL...")
    
    real_names = []
    for i, row in df.iterrows():
        url = row.get('url', '')
        if url:
            real_name = url_to_name(url)
            real_names.append(real_name)
        else:
            real_names.append(row.get('name', '–¢–æ–≤–∞—Ä –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'))
        
        if (i + 1) % 50 == 0:
            print(f"   ‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {i + 1} —Ç–æ–≤–∞—Ä–æ–≤...")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è
    df['name'] = real_names
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã —Å –Ω–æ—Ä–º–∞–ª—å–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –∏ —Ü–µ–Ω–∞–º–∏
    df_filtered = df[
        (df['name'] != '–¢–æ–≤–∞—Ä –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è') & 
        (df['name'].str.len() > 5) &
        (df['price'] > 0) &
        (df['portion_g'].notna()) &
        (df['portion_g'] > 0)
    ].copy()
    
    print(f"üìä –ü–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: {len(df_filtered)} –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
    output_file = "data/FINAL_real_foods.csv"
    df_filtered.to_csv(output_file, index=False, encoding='utf-8')
    
    print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {output_file}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
    print(f"\nüìã –ü–†–ò–ú–ï–†–´ –ù–ê–°–¢–û–Ø–©–ò–• –¢–û–í–ê–†–û–í:")
    for i, row in df_filtered.head(10).iterrows():
        print(f"{i+1}. {row['name']}")
        print(f"   üí∞ –¶–µ–Ω–∞: {row['price']} —Ä—É–±")
        print(f"   ‚öñÔ∏è –í–µ—Å: {row['portion_g']}–≥")
        print(f"   üíµ –¶–µ–Ω–∞ –∑–∞ 100–≥: {row['price_per_100g']:.1f} —Ä—É–±")
        print(f"   üîó URL: {row['url']}")
        print()
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print(f"üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   ‚úÖ –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(df_filtered)}")
    print(f"   üí∞ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞: {df_filtered['price'].mean():.1f} —Ä—É–±")
    print(f"   ‚öñÔ∏è –°—Ä–µ–¥–Ω–∏–π –≤–µ—Å: {df_filtered['portion_g'].mean():.1f}–≥")
    print(f"   üíµ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∑–∞ 100–≥: {df_filtered['price_per_100g'].mean():.1f} —Ä—É–±")
    
    # –¢–æ–ø –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    categories = df_filtered['category'].value_counts()
    print(f"\nüè∑Ô∏è –¢–û–ü –ö–ê–¢–ï–ì–û–†–ò–ò:")
    for category, count in categories.head(5).items():
        print(f"   ‚Ä¢ {category}: {count} —Ç–æ–≤–∞—Ä–æ–≤")
    
    return len(df_filtered)


if __name__ == "__main__":
    print("üéØ –ò–ó–í–õ–ï–ß–ï–ù–ò–ï –ù–ê–°–¢–û–Ø–©–ò–• –ù–ê–ó–í–ê–ù–ò–ô –¢–û–í–ê–†–û–í")
    print("üìã –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ URL –≤ —á–∏—Ç–∞–µ–º—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è")
    
    count = process_real_foods_file()
    
    if count > 0:
        print(f"\nüéâ –ì–û–¢–û–í–û! {count} –Ω–∞—Å—Ç–æ—è—â–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏!")
        print("üîç –§–∞–π–ª: data/FINAL_real_foods.csv")
        print("\n‚ú® –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –±–∞–∑–∞ –Ω–∞—Å—Ç–æ—è—â–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤!")
    else:
        print("\nüí• –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–≤–∞—Ä—ã")
        exit(1)
