#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å–∫—Ä–µ–π–ø–µ—Ä–∞ –≥–æ—Ç–æ–≤–æ–π –µ–¥—ã
"""
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

try:
    from utils.normalizer import DataNormalizer
    from sources.base import ScrapedProduct
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("üîß –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã:")
    print("   pip3 install -r requirements.txt")
    sys.exit(1)


def test_normalizer():
    """–¢–µ—Å—Ç –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–∞–Ω–Ω—ã—Ö...")
    
    normalizer = DataNormalizer()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç
    product = ScrapedProduct(
        id="test_product",
        name="  –¢–µ—Å—Ç–æ–≤—ã–π —Å–∞–ª–∞—Ç  ",
        category="–≥–æ—Ç–æ–≤—ã–µ –±–ª—é–¥–∞",
        kcal_100g=300,  # –∫–∞–ª–æ—Ä–∏–∏ –Ω–∞ –ø–æ—Ä—Ü–∏—é
        protein_100g=15, # –±–µ–ª–∫–∏ –Ω–∞ –ø–æ—Ä—Ü–∏—é
        fat_100g=10,     # –∂–∏—Ä—ã –Ω–∞ –ø–æ—Ä—Ü–∏—é
        carb_100g=25,    # —É–≥–ª–µ–≤–æ–¥—ã –Ω–∞ –ø–æ—Ä—Ü–∏—é
        portion_g=200,    # –º–∞—Å—Å–∞ –ø–æ—Ä—Ü–∏–∏ 200–≥
        price=299.99,
        shop="samokat",
        tags=["–û–°–¢–†–û–ï", "–•–∏—Ç", "–•–∏—Ç"],  # –¥—É–±–ª–∏–∫–∞—Ç
        composition="  –¢–æ–º–∞—Ç—ã, –æ–≥—É—Ä—Ü—ã, –ª—É–∫  ",
        brand="  –¢–ï–°–¢–û–í–´–ô –ë–†–ï–ù–î  ",
        allergens=["–ì–õ–Æ–¢–ï–ù", " –ú–û–õ–û–ö–û "]
    )
    
    print(f"üì¶ –ò—Å—Ö–æ–¥–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç:")
    print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: '{product.name}'")
    print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: '{product.category}'")
    print(f"   –ö–∞–ª–æ—Ä–∏–∏: {product.kcal_100g} –∫–∫–∞–ª –Ω–∞ {product.portion_g}–≥")
    print(f"   –ë–ñ–£: {product.protein_100g}–≥ –±–µ–ª–∫–æ–≤, {product.fat_100g}–≥ –∂–∏—Ä–æ–≤, {product.carb_100g}–≥ —É–≥–ª–µ–≤–æ–¥–æ–≤")
    print(f"   –¶–µ–Ω–∞: {product.price} —Ä—É–±")
    print(f"   –¢–µ–≥–∏: {product.tags}")
    print(f"   –°–æ—Å—Ç–∞–≤: '{product.composition}'")
    print(f"   –ë—Ä–µ–Ω–¥: '{product.brand}'")
    print(f"   –ê–ª–ª–µ—Ä–≥–µ–Ω—ã: {product.allergens}")
    
    # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø—Ä–æ–¥—É–∫—Ç
    normalized = normalizer.normalize_product(product)
    
    print(f"\n‚ú® –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç:")
    print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: '{normalized.name}'")
    print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: '{normalized.category}'")
    print(f"   –ö–∞–ª–æ—Ä–∏–∏: {normalized.kcal_100g} –∫–∫–∞–ª –Ω–∞ 100–≥")
    print(f"   –ë–ñ–£: {normalized.protein_100g}–≥ –±–µ–ª–∫–æ–≤, {normalized.fat_100g}–≥ –∂–∏—Ä–æ–≤, {normalized.carb_100g}–≥ —É–≥–ª–µ–≤–æ–¥–æ–≤ –Ω–∞ 100–≥")
    print(f"   –¶–µ–Ω–∞: {normalized.price} —Ä—É–±")
    print(f"   –¶–µ–Ω–∞ –∑–∞ 100–≥: {normalized.unit_price} —Ä—É–±")
    print(f"   –¢–µ–≥–∏: {normalized.tags}")
    print(f"   –°–æ—Å—Ç–∞–≤: '{normalized.composition}'")
    print(f"   –ë—Ä–µ–Ω–¥: '{normalized.brand}'")
    print(f"   –ê–ª–ª–µ—Ä–≥–µ–Ω—ã: {normalized.allergens}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏
    expected_kcal = (300 / 200) * 100  # 150 –∫–∫–∞–ª –Ω–∞ 100–≥
    expected_protein = (15 / 200) * 100  # 7.5–≥ –±–µ–ª–∫–æ–≤ –Ω–∞ 100–≥
    expected_fat = (10 / 200) * 100      # 5–≥ –∂–∏—Ä–æ–≤ –Ω–∞ 100–≥
    expected_carb = (25 / 200) * 100     # 12.5–≥ —É–≥–ª–µ–≤–æ–¥–æ–≤ –Ω–∞ 100–≥
    expected_unit_price = (299.99 / 200) * 100  # ~150 —Ä—É–± –∑–∞ 100–≥
    
    print(f"\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏:")
    print(f"   –ö–∞–ª–æ—Ä–∏–∏: {normalized.kcal_100g} ‚âà {expected_kcal} ‚úì")
    print(f"   –ë–µ–ª–∫–∏: {normalized.protein_100g} ‚âà {expected_protein} ‚úì")
    print(f"   –ñ–∏—Ä—ã: {normalized.fat_100g} ‚âà {expected_fat} ‚úì")
    print(f"   –£–≥–ª–µ–≤–æ–¥—ã: {normalized.carb_100g} ‚âà {expected_carb} ‚úì")
    print(f"   –¶–µ–Ω–∞ –∑–∞ 100–≥: {normalized.unit_price} ‚âà {expected_unit_price:.2f} ‚úì")
    
    print("\nüéâ –¢–µ—Å—Ç –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!")


def test_text_extraction():
    """–¢–µ—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–µ–∫—Å—Ç–∞...")
    
    normalizer = DataNormalizer()
    
    # –¢–µ—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ë–ñ–£
    nutrition_text = "–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å: 180 –∫–∫–∞–ª, –±–µ–ª–∫–∏: 8.5 –≥, –∂–∏—Ä—ã: 6.2 –≥, —É–≥–ª–µ–≤–æ–¥—ã: 22.1 –≥"
    nutrition = normalizer.extract_nutrition_from_text(nutrition_text)
    
    print(f"üìä –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ë–ñ–£ –∏–∑ —Ç–µ–∫—Å—Ç–∞:")
    print(f"   –¢–µ–∫—Å—Ç: '{nutrition_text}'")
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {nutrition}")
    
    # –¢–µ—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –º–∞—Å—Å—ã
    weight_text = "–ú–∞—Å—Å–∞ –Ω–µ—Ç—Ç–æ: 350 –≥"
    weight = normalizer.extract_weight_from_text(weight_text)
    
    print(f"\n‚öñÔ∏è –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –º–∞—Å—Å—ã –∏–∑ —Ç–µ–∫—Å—Ç–∞:")
    print(f"   –¢–µ–∫—Å—Ç: '{weight_text}'")
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {weight} –≥")
    
    # –¢–µ—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ü–µ–Ω—ã
    price_text = "–¶–µ–Ω–∞: 1 250 ‚ÇΩ"
    price = normalizer.extract_price_from_text(price_text)
    
    print(f"\nüí∞ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ü–µ–Ω—ã –∏–∑ —Ç–µ–∫—Å—Ç–∞:")
    print(f"   –¢–µ–∫—Å—Ç: '{price_text}'")
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {price} —Ä—É–±")
    
    print("\nüéâ –¢–µ—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å–∫—Ä–µ–π–ø–µ—Ä–∞ –≥–æ—Ç–æ–≤–æ–π –µ–¥—ã")
    print("=" * 50)
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ç–æ—Ä
        test_normalizer()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        test_text_extraction()
        
        print("\n" + "=" * 50)
        print("üéØ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ –°–∫—Ä–∏–ø—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
        
        print("\nüìã –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–µ–π–ø–µ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
        print("   python3 -m src.main --source samokat --city '–ú–æ—Å–∫–≤–∞' --out data.csv")
        print("   python3 -m src.main --source all --download-images --out foods.sqlite")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        print("üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:")
        print("   pip3 install -r requirements.txt")
        print("   playwright install chromium")
        return 1
    
    return 0


if __name__ == '__main__':
    sys.exit(main())
